# nginx/nginx.conf
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m inactive=60m use_temp_path=off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    server {
        server_name localhost;
        listen 80;

        # Обслуживание статических файлов фронтенда
        location / {
            root /usr/share/nginx/html;
            try_files $uri /index.html;
        }

        # Перенаправление API-запросов на бэкенд
        location /api {
            proxy_pass http://backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/products {
            proxy_pass http://backend:8080;
            proxy_cache api_cache;
            proxy_cache_valid 200 5m;

            # Настройки игнорирования заголовков:
            proxy_ignore_headers "Cache-Control" "Expires" "Vary";

            # Условия обхода кэша:
            proxy_cache_bypass $http_authorization;

            # Ключ кэширования:
            proxy_cache_key "$scheme$request_method$host$request_uri";

            # Диагностический заголовок (только статус кэша):
            add_header X-Cache-Status $upstream_cache_status;

            # Дополнительные настройки для надежности:
            proxy_cache_min_uses 1;
            proxy_cache_lock on;
            proxy_cache_use_stale error timeout updating;
        }

        # Обработка ошибок
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}